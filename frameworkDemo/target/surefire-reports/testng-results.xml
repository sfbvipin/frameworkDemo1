<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="156" passed="117" failed="39" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-16T15:32:46 IST" name="Surefire suite" finished-at="2021-03-16T15:39:03 IST" duration-ms="377643">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-03-16T15:32:46 IST" name="Surefire test" finished-at="2021-03-16T15:39:03 IST" duration-ms="377643">
      <class name="com.cucumber.runner.sharpRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:32:46 IST" name="setUpClass" finished-at="2021-03-16T15:32:46 IST" duration-ms="553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:32:46 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:32:51 IST" duration-ms="4307" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: Hit post request for Emerson to validate response code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at StepsDefine.apiAutomationFunctions.validate(apiAutomationFunctions.java:73)
at âœ½.validate 200(classpath:features/emersonAPI.feature:11)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:32:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:32:52 IST" duration-ms="1500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: Hit post request for Emerson to validate response code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:32:52 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:32:54 IST" duration-ms="1862" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: Hit post request for Emerson to validate response code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:32:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:32:55 IST" duration-ms="1478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: Hit post request for Emerson to validate response code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:32:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:32:58 IST" duration-ms="2129" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: Hit post request for Emerson Login to validate response body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at StepsDefine.apiAutomationFunctions.validate(apiAutomationFunctions.java:73)
at âœ½.validate 200(classpath:features/emersonAPI.feature:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:32:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:03 IST" duration-ms="5681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: Hit post request for Emerson Login to validate response body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:03 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:06 IST" duration-ms="2709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to validate tech profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:06 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:09 IST" duration-ms="2618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to validate tech profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:09 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:10 IST" duration-ms="1513" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to validate tech profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:12 IST" duration-ms="2070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to validate tech profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:14 IST" duration-ms="2255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to validate tech profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:14 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:17 IST" duration-ms="2358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to validate tech profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:19 IST" duration-ms="2311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to validate tech profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:21 IST" duration-ms="2216" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to validate tech profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at cucumberHooks.addonFunctions.compareString(addonFunctions.java:81)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:336)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_endpoint_with_resourcecd(apiAutomationFunctions.java:122)
at âœ½.verify response body for "tech profile" with "112"(classpath:features/emersonAPI.feature:53)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:21 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:24 IST" duration-ms="2623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to validate tech profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:24 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:26 IST" duration-ms="2029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to validate tech profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:28 IST" duration-ms="1958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for validating user profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:28 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:30 IST" duration-ms="1672" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for validating user profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at cucumberHooks.addonFunctions.compareString(addonFunctions.java:81)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:336)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_endpoint(apiAutomationFunctions.java:111)
at âœ½.verify response body for "validate error msg for invalid email"(classpath:features/emersonAPI.feature:69)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:30 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:31 IST" duration-ms="1706" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for validating user profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at cucumberHooks.addonFunctions.compareString(addonFunctions.java:81)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:336)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_endpoint(apiAutomationFunctions.java:113)
at âœ½.verify response body for "validate user with login udid"(classpath:features/emersonAPI.feature:69)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:33 IST" duration-ms="1696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for validating user profile"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:35 IST" duration-ms="1599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for updating UDID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:35 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:36 IST" duration-ms="1596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for updating UDID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:38 IST" duration-ms="1633" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for updating UDID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:38 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:39 IST" duration-ms="1657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for updating UDID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:42 IST" duration-ms="2181" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for login API SESBackend"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at StepsDefine.apiAutomationFunctions.validate(apiAutomationFunctions.java:73)
at âœ½.validate 200(classpath:features/emersonAPI.feature:100)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:43 IST" duration-ms="1718" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for login API SESBackend"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:43 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:45 IST" duration-ms="2002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for login API SESBackend"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:47 IST" duration-ms="2021" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for login API SESBackend"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at StepsDefine.apiAutomationFunctions.validate(apiAutomationFunctions.java:73)
at âœ½.validate 200(classpath:features/emersonAPI.feature:100)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:47 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:50 IST" duration-ms="2156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch feedbacks"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:50 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:51 IST" duration-ms="1508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch feedbacks"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:53 IST" duration-ms="1524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch feedbacks"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:53 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:55 IST" duration-ms="2164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch feedbacks"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:57 IST" duration-ms="2265" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Emergency call out details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.validate_response_body_for_correct_EmergencyCallOut_details(apiAutomationFunctions.java:187)
at âœ½.validate response body for correct EmergencyCallOut details(classpath:features/emersonAPI.feature:133)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:57 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:33:59 IST" duration-ms="1490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Emergency call out details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:33:59 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:02 IST" duration-ms="3357" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for creation of Emergency Call Out in OSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at StepsDefine.apiAutomationFunctions.validate(apiAutomationFunctions.java:73)
at âœ½.validate 200(classpath:features/emersonAPI.feature:146)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:02 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:05 IST" duration-ms="2641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for creation of Emergency Call Out in OSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:05 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:07 IST" duration-ms="2512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for creation of Emergency Call Out in OSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:07 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:10 IST" duration-ms="2482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for creation of Emergency Call Out in OSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:12 IST" duration-ms="2404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for creation of Emergency Call Out in OSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:14 IST" duration-ms="2537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for creation of Emergency Call Out in OSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:14 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:17 IST" duration-ms="2403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for creation of Emergency Call Out in OSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:19 IST" duration-ms="2418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for creation of Emergency Call Out in OSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:22 IST" duration-ms="2490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for creation of Emergency Call Out in OSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="3755" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for creation of Emergency Call Out in OSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <500> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <500> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at StepsDefine.apiAutomationFunctions.validate(apiAutomationFunctions.java:73)
at âœ½.validate 500(classpath:features/emersonAPI.feature:146)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="311" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for submitting feedback"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])
at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2795)
at com.fasterxml.jackson.databind.ObjectMapper$writeValue$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:148)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy:53)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy)
at io.restassured.mapper.ObjectMapper$serialize.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.mapping.ObjectMapping.serializeWithJackson2(ObjectMapping.groovy:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:149)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:100)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:217)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:150)
at io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at StepsDefine.apiAutomationFunctions.hit_post_api_feedback(apiAutomationFunctions.java:570)
at âœ½.Hit post API feedback with "95" "3" "3" "128999" "gurkeerat.singh@sofbang.com" "null" "test comments2" "null" "null" "2" "null" "1" "27-OCT-20 12:00:00.000000000 AM" "1" "27-DEC-20 12:00:00.000000000 AM"(classpath:features/emersonAPI.feature:167)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="16" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for submitting feedback"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])
at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2795)
at com.fasterxml.jackson.databind.ObjectMapper$writeValue$0.call(Unknown Source)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy:53)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy)
at io.restassured.mapper.ObjectMapper$serialize.call(Unknown Source)
at io.restassured.internal.mapping.ObjectMapping.serializeWithJackson2(ObjectMapping.groovy:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:149)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:100)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:150)
at io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at StepsDefine.apiAutomationFunctions.hit_post_api_feedback(apiAutomationFunctions.java:570)
at âœ½.Hit post API feedback with "95" "" "3" "128999" "gurkeerat.singh@sofbang.com" "null" "test comments2" "null" "null" "2" "null" "1" "27-OCT-20 12:00:00.000000000 AM" "1" "27-DEC-20 12:00:00.000000000 AM"(classpath:features/emersonAPI.feature:167)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="21" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for submitting feedback"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])
at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2795)
at com.fasterxml.jackson.databind.ObjectMapper$writeValue$0.call(Unknown Source)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy:53)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy)
at io.restassured.mapper.ObjectMapper$serialize.call(Unknown Source)
at io.restassured.internal.mapping.ObjectMapping.serializeWithJackson2(ObjectMapping.groovy:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:149)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:100)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:150)
at io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at StepsDefine.apiAutomationFunctions.hit_post_api_feedback(apiAutomationFunctions.java:570)
at âœ½.Hit post API feedback with "95" "3" "3" "128999" "gurkeerat.singh@sofbang.com" "null" "test comments2" "null" "null" "2" "null" "aa" "27-OCT-20 12:00:00.000000000 AM" "1" "27-DEC-20 12:00:00.000000000 AM"(classpath:features/emersonAPI.feature:167)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="13" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for submitting feedback"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])
at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2795)
at com.fasterxml.jackson.databind.ObjectMapper$writeValue$0.call(Unknown Source)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy:53)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy)
at io.restassured.mapper.ObjectMapper$serialize.call(Unknown Source)
at io.restassured.internal.mapping.ObjectMapping.serializeWithJackson2(ObjectMapping.groovy:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:149)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:100)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:150)
at io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at StepsDefine.apiAutomationFunctions.hit_post_api_feedback(apiAutomationFunctions.java:570)
at âœ½.Hit post API feedback with "95" "3" "3" "128999" "gurkeerat.singh@sofbang.com" "null" "test comments2" "null" "null" "2" "null" "1" "27-OCT-20 12:00:00.000000000 AM" "aa" "27-DEC-20 12:00:00.000000000 AM"(classpath:features/emersonAPI.feature:167)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="12" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for submitting feedback"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])
at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2795)
at com.fasterxml.jackson.databind.ObjectMapper$writeValue$0.call(Unknown Source)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy:53)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy)
at io.restassured.mapper.ObjectMapper$serialize.call(Unknown Source)
at io.restassured.internal.mapping.ObjectMapping.serializeWithJackson2(ObjectMapping.groovy:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:149)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:100)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:150)
at io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at StepsDefine.apiAutomationFunctions.hit_post_api_feedback(apiAutomationFunctions.java:570)
at âœ½.Hit post API feedback with "95" "3" "3" "128999" "khushboo.joshi@sofbang.com" "null" "test comments2" "null" "null" "2" "null" "1" "27-OCT-20 12:00:00.000000000 AM" "1" "27-DEC-20 12:00:00.000000000 AM"(classpath:features/emersonAPI.feature:167)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for submitting feedback"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])
at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2795)
at com.fasterxml.jackson.databind.ObjectMapper$writeValue$0.call(Unknown Source)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy:53)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy)
at io.restassured.mapper.ObjectMapper$serialize.call(Unknown Source)
at io.restassured.internal.mapping.ObjectMapping.serializeWithJackson2(ObjectMapping.groovy:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:149)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:100)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:150)
at io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at StepsDefine.apiAutomationFunctions.hit_post_api_feedback(apiAutomationFunctions.java:570)
at âœ½.Hit post API feedback with "95" "3" "3" "128999" "gurkeerat.singh@sofbang.co" "null" "test comments2" "null" "null" "2" "null" "1" "27-OCT-20 12:00:00.000000000 AM" "1" "27-DEC-20 12:00:00.000000000 AM"(classpath:features/emersonAPI.feature:167)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="9" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for submitting feedback"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])
at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2795)
at com.fasterxml.jackson.databind.ObjectMapper$writeValue$0.call(Unknown Source)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy:53)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy)
at io.restassured.mapper.ObjectMapper$serialize.call(Unknown Source)
at io.restassured.internal.mapping.ObjectMapping.serializeWithJackson2(ObjectMapping.groovy:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:149)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:100)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:150)
at io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at StepsDefine.apiAutomationFunctions.hit_post_api_feedback(apiAutomationFunctions.java:570)
at âœ½.Hit post API feedback with "95" "3" "3" "128999" "gurkeerat.singh@sofbang.com" "null" "test comments2" "null" "null" "2" "null" "1" "58-OCT-20 12:00:00.000000000 AM" "1" "27-DEC-20 12:00:00.000000000 AM"(classpath:features/emersonAPI.feature:167)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for submitting feedback"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])
at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2795)
at com.fasterxml.jackson.databind.ObjectMapper$writeValue$0.call(Unknown Source)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy:53)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy)
at io.restassured.mapper.ObjectMapper$serialize.call(Unknown Source)
at io.restassured.internal.mapping.ObjectMapping.serializeWithJackson2(ObjectMapping.groovy:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:149)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:100)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:150)
at io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at StepsDefine.apiAutomationFunctions.hit_post_api_feedback(apiAutomationFunctions.java:570)
at âœ½.Hit post API feedback with "95" "3" "3" "128999" "gurkeerat.singh@sofbang.com" "null" "test comments2" "null" "null" "2" "null" "1" "27-OCT-20 12:00:00.000000000 AM" "1" "32-DEC-20 12:00:00.000000000 AM"(classpath:features/emersonAPI.feature:167)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="13" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for submitting feedback"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])
at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2795)
at com.fasterxml.jackson.databind.ObjectMapper$writeValue$0.call(Unknown Source)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy:53)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy)
at io.restassured.mapper.ObjectMapper$serialize.call(Unknown Source)
at io.restassured.internal.mapping.ObjectMapping.serializeWithJackson2(ObjectMapping.groovy:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:149)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:100)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:150)
at io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at StepsDefine.apiAutomationFunctions.hit_post_api_feedback(apiAutomationFunctions.java:570)
at âœ½.Hit post API feedback with "AA" "3" "3" "128999" "gurkeerat.singh@sofbang.com" "null" "test comments2" "null" "null" "2" "null" "1" "27-OCT-20 12:00:00.000000000 AM" "1" "27-DEC-20 12:00:00.000000000 AM"(classpath:features/emersonAPI.feature:167)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:26 IST" duration-ms="12" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Post request for submitting feedback"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.json.JSONObject and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0])
at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:404)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2795)
at com.fasterxml.jackson.databind.ObjectMapper$writeValue$0.call(Unknown Source)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy:53)
at io.restassured.internal.mapping.Jackson2Mapper.serialize(Jackson2Mapper.groovy)
at io.restassured.mapper.ObjectMapper$serialize.call(Unknown Source)
at io.restassured.internal.mapping.ObjectMapping.serializeWithJackson2(ObjectMapping.groovy:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:149)
at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:100)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.serialize(ObjectMapping.groovy:150)
at io.restassured.internal.mapping.ObjectMapping$serialize.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.body(RequestSpecificationImpl.groovy:751)
at StepsDefine.apiAutomationFunctions.hit_post_api_feedback(apiAutomationFunctions.java:570)
at âœ½.Hit post API feedback with "95" "3" "3" "128900" "gurkeerat.singh@sofbang.com" "null" "test comments2" "null" "null" "2" "null" "1" "27-OCT-20 12:00:00.000000000 AM" "1" "27-DEC-20 12:00:00.000000000 AM"(classpath:features/emersonAPI.feature:167)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:28 IST" duration-ms="1820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Allowances"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:28 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:30 IST" duration-ms="1807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Allowances"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:30 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:31 IST" duration-ms="1662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Allowances"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:33 IST" duration-ms="1668" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Allowances"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:51 IST" duration-ms="18356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch languages"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:34:55 IST" duration-ms="3628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch languages"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:34:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:09 IST" duration-ms="14387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch languages"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:09 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:13 IST" duration-ms="3979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch languageKeyMapping"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:13 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:15 IST" duration-ms="1901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch languageKeyMapping"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:15 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:17 IST" duration-ms="1929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch languageKeyMapping"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:19 IST" duration-ms="1637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch languageKeyMapping"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:20 IST" duration-ms="1630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch lookups"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:20 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:22 IST" duration-ms="1520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch lookups"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:23 IST" duration-ms="1554" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch lookups"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:23 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:25 IST" duration-ms="2059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch lookups"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:25 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:29 IST" duration-ms="3647" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Detailed notes attachment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_detailed_notes_attachment(apiAutomationFunctions.java:128)
at âœ½.verify response body for detailed notes attachment with "9"(classpath:features/emersonAPI.feature:251)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:56 IST" duration-ms="27103" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Detailed notes attachment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_detailed_notes_attachment(apiAutomationFunctions.java:128)
at âœ½.verify response body for detailed notes attachment with "15748581879668350"(classpath:features/emersonAPI.feature:251)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:56 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:35:58 IST" duration-ms="1802" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Detailed notes attachment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_detailed_notes_attachment(apiAutomationFunctions.java:128)
at âœ½.verify response body for detailed notes attachment with "-9"(classpath:features/emersonAPI.feature:251)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:35:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:00 IST" duration-ms="1811" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Detailed notes attachment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_detailed_notes_attachment(apiAutomationFunctions.java:128)
at âœ½.verify response body for detailed notes attachment with "10"(classpath:features/emersonAPI.feature:251)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:00 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:01 IST" duration-ms="1618" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Detailed notes attachment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_detailed_notes_attachment(apiAutomationFunctions.java:128)
at âœ½.verify response body for detailed notes attachment with ""(classpath:features/emersonAPI.feature:251)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:03 IST" duration-ms="1629" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch FCR Attachment details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_FCR_attachment(apiAutomationFunctions.java:133)
at âœ½.verify response body for FCR attachment with "1"(classpath:features/emersonAPI.feature:268)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:03 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:06 IST" duration-ms="2682" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch FCR Attachment details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_FCR_attachment(apiAutomationFunctions.java:133)
at âœ½.verify response body for FCR attachment with "15743362115738766"(classpath:features/emersonAPI.feature:268)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:06 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:07 IST" duration-ms="1630" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch FCR Attachment details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_FCR_attachment(apiAutomationFunctions.java:133)
at âœ½.verify response body for FCR attachment with "-1"(classpath:features/emersonAPI.feature:268)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:07 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:09 IST" duration-ms="1711" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch FCR Attachment details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_FCR_attachment(apiAutomationFunctions.java:133)
at âœ½.verify response body for FCR attachment with "10"(classpath:features/emersonAPI.feature:268)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:09 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:11 IST" duration-ms="1622" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch FCR Attachment details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.verify_response_body_for_FCR_attachment(apiAutomationFunctions.java:133)
at âœ½.verify response body for FCR attachment with ""(classpath:features/emersonAPI.feature:268)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:11 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:12 IST" duration-ms="1664" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch User and Permission"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.validate_response_body_for_correct_user_and_permission(apiAutomationFunctions.java:165)
at âœ½.validate response body for correct user and permission(classpath:features/emersonAPI.feature:284)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:14 IST" duration-ms="1463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch User and Permission"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:14 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:19 IST" duration-ms="4790" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task list"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:23 IST" duration-ms="4739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task list"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:23 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:28 IST" duration-ms="4378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task list"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:28 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:33 IST" duration-ms="4753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task list"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:42 IST" duration-ms="9783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task list"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:45 IST" duration-ms="2203" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Records"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at StepsDefine.apiAutomationFunctions.validate_Deletion_Date_in_response_body_is_greater_than_or_equal_to_UpdateDate(apiAutomationFunctions.java:970)
at âœ½.validate Deletion Date in response body is greater than or equal to "2021-01-28 17:12:35"(classpath:features/emersonAPI.feature:312)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:47 IST" duration-ms="2238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Records"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:47 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:49 IST" duration-ms="1881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Records"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:49 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:51 IST" duration-ms="2061" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Records"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:53 IST" duration-ms="1898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Records"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:53 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:54 IST" duration-ms="1849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Records"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:56 IST" duration-ms="1806" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Release Notes"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.validate_response_body_for_Release_Notes(apiAutomationFunctions.java:143)
at âœ½.validate response body for Release Notes(classpath:features/emersonAPI.feature:328)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:56 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:36:58 IST" duration-ms="1529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Release Notes"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:36:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:00 IST" duration-ms="2113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch ActivitiesOSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:00 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:02 IST" duration-ms="2010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch ActivitiesOSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:02 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:04 IST" duration-ms="2120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch ActivitiesOSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:04 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:06 IST" duration-ms="1931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch ActivitiesOSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:06 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:08 IST" duration-ms="2119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch ActivitiesOSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:08 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:10 IST" duration-ms="2245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch ActivitiesOSC"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:12 IST" duration-ms="1772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Debrief Items"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:14 IST" duration-ms="1464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Debrief Items"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:14 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:15 IST" duration-ms="1584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Debrief Items"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:15 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:17 IST" duration-ms="1515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Debrief Items"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:18 IST" duration-ms="1798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Deleted Debrief Items"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:18 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:23 IST" duration-ms="4369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Report Attribute Attachments"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:23 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:24 IST" duration-ms="1590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Report Attribute Attachments"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:24 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:26 IST" duration-ms="1638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Report Attribute Attachments"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:29 IST" duration-ms="2456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Report Attribute Attachments"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:30 IST" duration-ms="1598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Report Attribute Attachments"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:30 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:32 IST" duration-ms="1883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch TimeZones"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:32 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:34 IST" duration-ms="1558" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch TimeZones"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:34 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:35 IST" duration-ms="1920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch TimeZones"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:35 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:37 IST" duration-ms="1499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch TimeZones"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:37 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:39 IST" duration-ms="2001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch TimeZones"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:41 IST" duration-ms="1523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch TimeZones"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:41 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:42 IST" duration-ms="1888" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Roles"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.validate_response_body_for_correct_role_details(apiAutomationFunctions.java:176)
at âœ½.validate response body for correct role details(classpath:features/emersonAPI.feature:406)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:44 IST" duration-ms="1595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Roles"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:44 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:46 IST" duration-ms="2444" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Users"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at cucumberHooks.addonFunctions.getCellData(addonFunctions.java:58)
at cucumberHooks.addonFunctions.validateResponse(addonFunctions.java:93)
at StepsDefine.apiAutomationFunctions.verify_body(apiAutomationFunctions.java:323)
at StepsDefine.apiAutomationFunctions.validate_response_body_for_user_details(apiAutomationFunctions.java:154)
at âœ½.validate response body for user details(classpath:features/emersonAPI.feature:419)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:46 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:48 IST" duration-ms="1443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Users"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:48 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:51 IST" duration-ms="2807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:54 IST" duration-ms="3656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:37:57 IST" duration-ms="2330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:37:57 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:00 IST" duration-ms="3006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:00 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:02 IST" duration-ms="2740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:02 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:05 IST" duration-ms="2160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Task Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:05 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:07 IST" duration-ms="1961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:07 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:08 IST" duration-ms="1489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:08 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:10 IST" duration-ms="1569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:12 IST" duration-ms="2228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:14 IST" duration-ms="2376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:14 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:16 IST" duration-ms="1537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:16 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:17 IST" duration-ms="1594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:19 IST" duration-ms="1964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:21 IST" duration-ms="1973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:21 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:24 IST" duration-ms="2590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:24 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:26 IST" duration-ms="2021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Work Schedules"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:28 IST" duration-ms="1726" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Work Schedules"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:28 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:29 IST" duration-ms="1634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Work Schedules"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:31 IST" duration-ms="1785" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Work Schedules"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:33 IST" duration-ms="1690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch Work Schedules"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:35 IST" duration-ms="2493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch clarity log"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:35 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:38 IST" duration-ms="2363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch clarity log"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:38 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:41 IST" duration-ms="3483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch clarity log"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:41 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:44 IST" duration-ms="2445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch clarity log"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:44 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:46 IST" duration-ms="2137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch clarity log"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:46 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:48 IST" duration-ms="2494" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch analyticsReportDays"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:48 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:50 IST" duration-ms="1510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch analyticsReportDays"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:50 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:52 IST" duration-ms="2539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch User Prefrences"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:52 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:54 IST" duration-ms="1516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Hit Get request for Emerson to fetch User Prefrences"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Emerson API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:55 IST" duration-ms="1635" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: send get request for user account"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Hello Sign API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <401>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at StepsDefine.apiAutomationFunctions.validate(apiAutomationFunctions.java:73)
at âœ½.validate 200(classpath:features/helloSignAPI.feature:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:57 IST" duration-ms="1435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: send get request for user account"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Hello Sign API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:57 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:38:58 IST" duration-ms="1644" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: send get request for user account with correct credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Hello Sign API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <401>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at StepsDefine.apiAutomationFunctions.validate_response_code(apiAutomationFunctions.java:81)
at âœ½.validate response code(classpath:features/helloSignAPI.feature:20)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:38:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:39:00 IST" duration-ms="1464" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: verify user account"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Hello Sign API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <401>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at StepsDefine.apiAutomationFunctions.validate_response_code(apiAutomationFunctions.java:81)
at âœ½.validate response code(classpath:features/helloSignAPI.feature:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:39:00 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:39:01 IST" duration-ms="1415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: send get request for user account wrong credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Hello Sign API cases]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:39:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-16T15:39:03 IST" duration-ms="1368" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["API: Verify team details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Feature to test Hello Sign API cases]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <401>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at StepsDefine.apiAutomationFunctions.validate_response_code(apiAutomationFunctions.java:81)
at âœ½.validate response code(classpath:features/helloSignAPI.feature:41)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.cucumber.runner.sharpRunner@f6efaab]" started-at="2021-03-16T15:39:03 IST" name="tearDownClass" finished-at="2021-03-16T15:39:03 IST" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.cucumber.runner.sharpRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
